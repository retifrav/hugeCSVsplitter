<Window x:Class="hugeCSVsplitter.HelpWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="About hugeCSVsplitter" Height="390" Width="500" ResizeMode="NoResize"
        SizeToContent="Height">
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="75"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="80"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" HorizontalAlignment="Right">
            <Image Source="reses/info.png"/>
        </Label>
        <Label Grid.Row="0" Grid.Column="0" Content="Version:" FontWeight="Bold" HorizontalAlignment="Right"/>
        <Label Grid.Row="0" Grid.Column="1" Name="vers" Grid.ColumnSpan="2" />
        <Label Grid.Row="1" Grid.Column="0" Content="License:" FontWeight="Bold" HorizontalAlignment="Right"/>
        <Label Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center">
                <Hyperlink NavigateUri="https://raw.githubusercontent.com/retifrav/hugeCSVsplitter/refs/heads/master/LICENSE" RequestNavigate="openLink">
                    GPLv3
                </Hyperlink>
            </TextBlock>
        </Label>
        <Label Grid.Row="2" Grid.Column="0" Content="Repository:" FontWeight="Bold" HorizontalAlignment="Right"/>
        <Label Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center">
                <Hyperlink NavigateUri="https://github.com/retifrav/hugeCSVsplitter" RequestNavigate="openLink">
                    GitHub
                </Hyperlink>
            </TextBlock>
        </Label>
        <Label Grid.Row="3" Grid.Column="0" Content="Copyright:" FontWeight="Bold" HorizontalAlignment="Right"/>
        <Label Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2">
            <TextBlock>
                2014, <Hyperlink NavigateUri="https://decovar.dev/" RequestNavigate="openLink">Declaration of VAR</Hyperlink>
            </TextBlock>
        </Label>
        <TabControl Grid.ColumnSpan="3" Grid.Row="4" Margin="0 10 0 0">
            <TabItem Header="Description">
                <TextBlock Margin="5" TextWrapping="Wrap">
                    Say, you have a really huge CSV file, like 1 GB or even more. What can you do with it?
                    Common application are likely to struggle with it, as you'd need 1 GB of free RAM to do
                    so. And what if the file is 5 GB? Or 10 GB?
                    <LineBreak/><LineBreak/>
                    One possible solution would be to split that file into several smaller files, which
                    could be delt with separately. And this application serves that exact purpose - splitting
                    files.
                    <LineBreak/><LineBreak/>
                    All you need to do is to drag-and-drop your file to the dashed area in the middle
                    of the main application window. Or you can specify the path to the file in the first text
                    input field. Then you can specify the output directory - where splitted files will be saved
                    - but you can leave that field blank, and then resulting files will be saved to the same
                    directory where the original CSV file is.
                </TextBlock>
            </TabItem>
            <TabItem Header="Settings">
                <TextBlock Margin="10,5,0,5" TextWrapping="Wrap">
                    There are some settings in the <TextBlock FontFamily="Courier New">*.config</TextBlock> file:
                    
                    <LineBreak/><LineBreak/>
                    
                    - <TextBlock FontWeight="Bold">linesPerFile</TextBlock>: how many lines will trigger
                    splitting into a new file. I would recommend setting <TextBlock FontFamily="Courier New">500000</TextBlock>
                    or more there, if strings in you CSV file are rather short. Otherwise, I would set <TextBlock FontFamily="Courier New">100000</TextBlock>
                    or less. Either way, don't set it to very big values, as then you will encounter the same problem
                    of running our of available RAM.
                    
                    <LineBreak/><LineBreak/>
                    
                    - <TextBlock FontWeight="Bold">addHeader</TextBlock>: set to <TextBlock FontFamily="Courier New">True</TextBlock>
                    (<TextBlock FontStyle="Italic">default value</TextBlock>), if you want to add the first header line
                    from the source file to all the splitted files. Otherwise, set to <TextBlock FontFamily="Courier New">False</TextBlock>.
                    
                    <LineBreak/><LineBreak/>
                    
                    - <TextBlock FontWeight="Bold">filesEncoding</TextBlock>: text encoding to use for reading and writing files. The default value
                    is <TextBlock FontFamily="Courier New">utf-8</TextBlock>, but you can set any other
                    <Hyperlink NavigateUri="https://learn.microsoft.com/en-us/dotnet/fundamentals/runtime-libraries/system-text-encoding#list-of-encodings"
                               RequestNavigate="openLink">
                        valid encoding
                    </Hyperlink> instead.
                </TextBlock>
            </TabItem>
            <!--<TabItem Header="Command line arguments">
                <TextBlock Margin="5" TextWrapping="Wrap">
                    You can start the application with command line arguments:
                    <LineBreak/><LineBreak/>
                    <TextBlock FontFamily="Courier New" FontWeight="Bold">-i</TextBlock>
                    <TextBlock Margin="15 0 0 0">path to the source CSV file</TextBlock>
                    <LineBreak/>
                    <TextBlock FontFamily="Courier New" FontWeight="Bold">-o</TextBlock>
                    <TextBlock Margin="15 0 0 0">path to the output directory. By default to the source file directory</TextBlock>
                    <LineBreak/>
                    <TextBlock FontFamily="Courier New" FontWeight="Bold">-s</TextBlock>
                    <TextBlock Margin="15 0 0 0">how much lines will trigger the splitting into another file</TextBlock>
                    <LineBreak/><LineBreak/>
                    Example:<LineBreak/><LineBreak/>
                    <TextBlock FontFamily="Courier New">hugeCSVsplitter.exe -i D:\somefile.csv -o D:\splitted\ -s 25000</TextBlock>
                    <LineBreak/><LineBreak/>
                    or with default values:<LineBreak/><LineBreak/>
                    <TextBlock FontFamily="Courier New">hugeCSVsplitter.exe -i D:\somefile.csv</TextBlock>
                </TextBlock>
            </TabItem>-->
            <TabItem Header="3rd party">
                <TextBlock Margin="5" TextWrapping="Wrap">
                    The application is written in C# / WPF and .NET Framework. Those nasty bastards
                    did all the work, I just wrote a few lines of code.
                    <LineBreak/><LineBreak/>
                    I used <Hyperlink NavigateUri="https://ookii.org/Software/Dialogs/"
                    RequestNavigate="openLink">Ookii.Dialogs</Hyperlink>
                    for the file/folder dialogs, because for some reasons there is no such thing
                    as <TextBlock FontFamily="Courier New">OpenDirectoryDialog</TextBlock> in WPF
                    (<TextBlock FontStyle="Italic">or at least there wasn't in .NET 4.5.1</TextBlock>) .
                    <LineBreak/><LineBreak/>
                    Also I snatched some (<TextBlock FontStyle="Italic">all</TextBlock>) the icons from
                    <Hyperlink NavigateUri="https://www.iconfinder.com/" RequestNavigate="openLink">Iconfinder</Hyperlink>.
                    Which probably violates some license, but I was young and reckless back then.
                </TextBlock>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
